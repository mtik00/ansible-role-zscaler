---

- name: check for required variables
  ansible.builtin.assert:
    that:
      - zscaler_install_url is defined
      - zscaler_pem_destination is defined

- name: zscaler apt dependencies
  become: true
  ansible.builtin.apt:
    cache_valid_time: "{{ apt_cache_valid_time }}"
    name:
      - ca-certificates
      - libnss3-tools
      - libpcap-dev
      - libqt5core5a
      - libqt5dbus5
      - libqt5sql5
      - libqt5sql5-sqlite
      - libqt5webchannel5
      - libqt5webengine5
      - libqt5webenginecore5
      - libqt5webenginewidgets5
      - libqt5webkit5
      - libqt5webview5
      - libqt5widgets5
      - net-tools
      - tcpdump
      - wget

- name: copy zscaler-bundle.pem
  ansible.builtin.copy:
    src: files/zscaler-bundle.pem
    dest: "{{ zscaler_pem_destination }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0600

- name: copy zscaler.cert
  ansible.builtin.copy:
    src: files/zscaler.crt
    dest: "{{ zscaler_pem_destination }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0600

- name: create zscaler vars file
  ansible.builtin.copy:
    dest: "{{ env_files_path }}/zscaler"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0600
    content: |
      export ZSCALER_CERTIFICATE_BUNDLE="{{ zscaler_pem_destination }}/zscaler-bundle.pem"
      export REQUESTS_CA_BUNDLE=$ZSCALER_CERTIFICATE_BUNDLE
      export CURL_CA_BUNDLE=$ZSCALER_CERTIFICATE_BUNDLE
      export NODE_EXTRA_CA_CERTS=$ZSCALER_CERTIFICATE_BUNDLE
      export AWS_CA_BUNDLE=$ZSCALER_CERTIFICATE_BUNDLE
      export SSL_CERT_FILE=$ZSCALER_CERTIFICATE_BUNDLE

- name: check for installed binary
  ansible.builtin.stat:
    path: /opt/zscaler/bin/zstunnel
  register: zscaler_binary

- name: install zscaler
  become: true
  when: not zscaler_binary.stat.exists
  block:
    - name: download installer
      ansible.builtin.get_url:
        url: "{{ zscaler_install_url }}"
        dest: /tmp/zscaler-installer
        mode: "0777"
    - name: run installer
      ansible.builtin.command: /tmp/zscaler-installer
      changed_when: false
    - name: cleanup installer
      ansible.builtin.file:
        path: /tmp/zscaler-installer
        state: absent
